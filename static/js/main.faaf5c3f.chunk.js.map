{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/helper.ts","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","imdbUrl","description","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","movieInput","setMovieInput","tempMovie","setTempMovie","movieError","setMovieError","loading","setLoading","onSubmit","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","data","movieData","Title","Plot","imdbID","Poster","normalizeMovieData","finally","htmlFor","type","id","placeholder","classNames","onChange","target","value","disabled","onClick","prevState","some","prevMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faaf5c3f.chunk.js","sourcesContent":["import { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard = ({\n  movie: {\n    imgUrl,\n    title,\n    imdbUrl,\n    description,\n  },\n}: Props) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {description}\n        <br />\n        <a href={imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nexport const normalizeMovieData = (movieData: MovieData): Movie => {\n  const {\n    Title,\n    Plot,\n    imdbID,\n    Poster,\n  } = movieData;\n\n  const poster = Poster === 'N/A'\n    ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n    : Poster;\n\n  return {\n    title: Title,\n    description: Plot,\n    imdbId: imdbID,\n    imgUrl: poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n  };\n};\n","import {\n  Dispatch,\n  FormEventHandler,\n  SetStateAction,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { normalizeMovieData } from './helper';\nimport { Movie } from '../../types/Movie';\nimport './FindMovie.scss';\nimport { MovieData } from '../../types/MovieData';\n\ntype FindMovieProps = {\n  setMovies: Dispatch<SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie = ({ setMovies }: FindMovieProps) => {\n  const [movieInput, setMovieInput] = useState('');\n  const [tempMovie, setTempMovie] = useState<Movie | null>(null);\n  const [movieError, setMovieError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    getMovie(movieInput)\n      .then((data) => {\n        if (data.Response === 'False') {\n          setMovieError(true);\n        } else {\n          setTempMovie(normalizeMovieData(data as MovieData));\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const addMovie = () => {\n    if (tempMovie) {\n      setMovies((prevState) => {\n        if (\n          !prevState.some((prevMovie) => prevMovie.imdbId === tempMovie.imdbId)\n        ) {\n          return [...prevState, tempMovie];\n        }\n\n        return prevState;\n      });\n    }\n\n    setTempMovie(null);\n    setMovieInput('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': movieError })}\n              onChange={(e) => {\n                setMovieError(false);\n                setMovieInput(e.target.value);\n              }}\n              value={movieInput}\n            />\n          </div>\n\n          {movieError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!movieInput}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {tempMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {tempMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={tempMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5a2ff0e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}