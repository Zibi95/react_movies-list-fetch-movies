{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/helper.ts","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","imdbUrl","description","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","movieInput","setMovieInput","setMovie","movieError","setMovieError","loading","setLoading","onSubmit","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","data","movieData","Title","Plot","imdbID","Poster","normalizeMovieData","finally","htmlFor","type","id","placeholder","classNames","onChange","target","value","disabled","onClick","App","setMovies","some","prevMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dec22021.chunk.js","sourcesContent":["import { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard = ({\n  movie: {\n    imgUrl,\n    title,\n    imdbUrl,\n    description,\n  },\n}: Props) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {description}\n        <br />\n        <a href={imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nexport const normalizeMovieData = (movieData: MovieData): Movie => {\n  const {\n    Title,\n    Plot,\n    imdbID,\n    Poster,\n  } = movieData;\n\n  const poster = Poster === 'N/A'\n    ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n    : Poster;\n\n  return {\n    title: Title,\n    description: Plot,\n    imdbId: imdbID,\n    imgUrl: poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n  };\n};\n","import { useState } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { normalizeMovieData } from './helper';\nimport { Movie } from '../../types/Movie';\n\nimport './FindMovie.scss';\n\ntype FindMovieProps = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie = ({ onAdd }: FindMovieProps) => {\n  const [movieInput, setMovieInput] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieError, setMovieError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n\n    getMovie(movieInput)\n      .then(data => {\n        if (data.Response === 'True') {\n          setMovie(normalizeMovieData(data));\n        } else {\n          setMovieError(true);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const addMovie = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setMovie(null);\n    setMovieInput('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames('input', { 'is-danger': movieError })\n              }\n              onChange={(e) => {\n                setMovieError(false);\n                setMovieInput(e.target.value);\n              }}\n              value={movieInput}\n            />\n          </div>\n\n          {\n            movieError && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                classNames('button', 'is-light', { 'is-loading': loading })\n              }\n              disabled={!movieInput}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {\n            movie && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={addMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {\n        movie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5a2ff0e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const isMovieAdded = movies.some(\n      (prevMovie) => prevMovie.imdbId === movie.imdbId,\n    );\n\n    if (!isMovieAdded) {\n      setMovies((prevState) => [...prevState, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}